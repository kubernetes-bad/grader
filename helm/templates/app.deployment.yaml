apiVersion: apps/v1
kind: Deployment
metadata:
  name: "{{ include "grader.fullname" . }}-app"
  labels:
    app.kubernetes.io/name: "{{ include "grader.fullname" . }}-app"
    app.kubernetes.io/instance: "{{ include "grader.name" . }}"
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: "{{ include "grader.fullname" . }}-app"
      app.kubernetes.io/instance: "{{ include "grader.name" . }}"
  template:
    metadata:
      labels:
        app.kubernetes.io/name: "{{ include "grader.fullname" . }}-app"
        app.kubernetes.io/instance: "{{ include "grader.name" . }}"
    spec:
      {{ with .Values.image.pullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{ end }}
      containers:
        - name: "{{ include "grader.name" . }}"
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - containerPort: {{ .Values.port }}
              name: http
              protocol: TCP
          volumeMounts:
            - name: config-volume
              mountPath: /app/config/local.yml
              subPath: local.yml
          env:
            - name: GRADER_DB_HOST
              value: "grader-mariadb"
            - name: GRADER_DB_USER
              value: "{{ .Values.mariadb.auth.username }}"
            - name: GRADER_DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.mariadb.auth.existingSecret }}
                  key: mariadb-password
            - name: GRADER_DB_DATABASE
              value: "{{ .Values.mariadb.auth.database }}"
            - name: GRADER_PORT
              value: "{{ .Values.port }}"
          livenessProbe:
            failureThreshold: 5
            httpGet:
              path: /health
              port: {{ .Values.port }}
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 10
          readinessProbe:
            failureThreshold: 5
            httpGet:
              path: /health
              port: {{ .Values.port }}
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 10
      volumes:
        - name: config-volume
          configMap:
            name: {{ .Values.configMap.name }}
